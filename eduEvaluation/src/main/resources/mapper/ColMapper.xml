<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.philip.edu.eval.mapper.ColMapper">
	<resultMap id="colTaskSchoolResultMap" type="com.philip.edu.eval.bean.ColTaskSchool">
		<id property="id" column="id"/>
		<result property="school_id" column="school_id"/>
		<result property="school_name" column="school_name"/>
		<result property="school_code" column="school_code"/>
		<result property="collection_school_id" column="cid"/>
		<result property="process_status" column="process_status"/>
	</resultMap>
	
	<resultMap id="colTaskMajorResultMap" type="com.philip.edu.eval.bean.ColTaskMajor">
		<id property="id" column="id"/>
		<result property="major_id" column="major_id"/>
		<result property="major_name" column="major_name"/>
		<result property="major_code" column="major_code"/>
	</resultMap>
	
	<resultMap id="CapitalPerformanceIdMap" type="int">
		<id property="id" column="id"/>
	</resultMap>
	
	<resultMap id="BasicPerfromanceIdMap" type="int">
		<id property="id" column="id"/>
	</resultMap>
	
	<resultMap id="colTaskListResultMap" type="com.philip.edu.eval.bean.CollectionTask">
		<id property="id" column="id"/>
		<result property="task_name" column="task_name"/>
		<result property="task_year" column="task_year"/>
		<result property="status" column="status"/>
		<result property="start_time" column="start_time"/>
		<result property="end_time" column="end_time"/>
		<result property="form_basic_weight" column="form_basic_weight"/>
		<result property="form_performance_weight" column="form_performance_weight"/>
		<result property="form_capitalprogress_weight" column="form_capitalprogress_weight"/>
	</resultMap> 
	
	<resultMap id="SchoolTaskResultMap" type="com.philip.edu.eval.bean.SchoolTask">
		<id property="id" column="id"/>
		<result property="task_name" column="task_name"/>
		<result property="task_year" column="task_year"/>
		<result property="start_time" column="start_time"/>
		<result property="end_time" column="end_time"/>
		<result property="school_id" column="school_id"/>
		<result property="user_id" column="user_id"/>
	</resultMap>
	
	<resultMap id="MajorTaskResultMap" type="com.philip.edu.eval.bean.MajorTask">
		<id property="collection_major_id" column="colletion_major_id"/>
		<result property="school_id" column="school_id"/>
		<result property="school_name" column="school_name"/>
		<result property="major_id" column="major_id"/>
		<result property="major_name" column="major_name"/>
		<result property="process_status" column="process_status"/>
		<result property="status_msg" column="config_value"/>
		<result property="update_time" column="update_time"/>
	</resultMap>
	
	
	<resultMap id="metricsListResultMap" type="com.philip.edu.eval.bean.MetricsDetail">
		<id property="id" column="id"/>
		<result property="m_system_id" column="m_system_id"/>
		<result property="metrics_name" column="metric_name"/>
		<result property="level" column="level"/>
		<result property="metrics_code" column="metric_code"/>
		<result property="order" column="morder"/>
		<result property="description" column="description"/>
		<result property="pid" column="pid"/>
		<result property="unit" column="unit"/>
	</resultMap> 
	
	<resultMap id="performanceResultMap" type="com.philip.edu.eval.bean.PerformanceForm">
		<id property="id" column="id"/>
		<result property="collection_major_id" column="collection_major_id" />
		<result property="metrics_id" column="metrics_id" />
		<result property="metrics_name" column="metric_name" />
		<result property="metrics_level" column="level" />
		<result property="metrics_pid" column="pid" />
		<result property="metrics_order" column="morder"/>
		<result property="unit" column="unit" />
		<result property="current_value" column="current_value" />
		<result property="target_value" column="target_value" />
		<result property="actual_value" column="actual_value" />
		<result property="score" column="score" />
		<result property="self_evaluate" column="self_evaluate" />
		<result property="self_introduction" column="self_introduction" />
		<result property="process_status" column="process_status" />
	</resultMap>
	
	<resultMap id="materialResultMap" type="com.philip.edu.eval.bean.Material">
		<id property="id" column="id"/>
		<result property="material_id" column="material_id" />
		<result property="material_name" column="material_name" />
		<result property="update_time" column="update_time" />
		<result property="doc_size" column="doc_size" />
 	</resultMap>
 	
 	<resultMap id="capitalResultMap" type="com.philip.edu.eval.bean.CapitalProgressForm">
 		<id property="id" column="id" />
 		<result property="collection_major_id" column="collection_major_id"/>
 		<result property="central_disburserment_total" column="central_disburserment_total"/>
 		<result property="central_paid_total" column="central_paid_total"/>
 		<result property="region_disbursement_amount" column="region_disbursement_amount"/>
 		<result property="region_paid_amount" column="region_paid_amount"/>
 		<result property="region_paid_hardware_amount" column="region_paid_hardware_amount"/>
 		<result property="region_paid_internal_amount" column="region_paid_internal_amount"/>
 		<result property="central_disbursement_amount" column="central_disbursement_amount"/>
 		<result property="central_paid_amount" column="central_paid_amount"/>
 		<result property="central_paid_hardware_amount" column="central_paid_hardware_amount"/>
 		<result property="central_paid_internal_amount" column="central_paid_internal_amount"/>
 		<result property="school_funding_total" column="school_funding_total"/>
 		<result property="school_funding_hardware" column="school_funding_hardware"/>
 		<result property="school_funding_internal" column="school_funding_internal"/>
 		<result property="process_status" column="process_status"/>
 	</resultMap>
	
	<resultMap id="colTaskSchoolId" type="int">
		<id property="id" column="id"/>
	</resultMap>
	
	<resultMap id="statusResultMap" type="com.philip.edu.eval.bean.ProcessStatus">
		<result property="status_code" column="key_int"/>
		<result property="msg" column="config_value"/>
		<result property="status_string" column="key_string"/>
	</resultMap>
    
    <insert id="insertColTask" parameterType="com.philip.edu.eval.bean.CollectionTask" useGeneratedKeys="true" keyProperty="id" >
    	<selectKey resultType="int" keyProperty="id" order="AFTER">
    		select LAST_INSERT_ID() As id
  		</selectKey>
    	insert into tbl_collection_tasks(task_name, task_year, start_time, end_time, status, use_metrics_system, form_basic_weight, form_performance_weight, form_capitalprogress_weight, create_time, update_time) 
    	values(#{task_name}, #{task_year}, #{start_time}, #{end_time}, #{status}, #{use_metrics_system}, #{form_basic_weight}, #{form_performance_weight}, #{form_capitalprogress_weight}, #{create_time}, #{update_time})
    </insert>
    
    <update id="updateColTask" parameterType="com.philip.edu.eval.bean.CollectionTask">
    	 update tbl_collection_tasks
    <set >
      <if test="task_name != null" >
        task_name = #{task_name,jdbcType=VARCHAR},
      </if>
      <if test="task_year != null" >
        task_year = #{task_year,jdbcType=VARCHAR},
      </if>
      <if test="update_time != null" >
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="form_basic_weight != null" >
        form_basic_weight = #{form_basic_weight,jdbcType=INTEGER},
      </if>
      <if test="form_performance_weight != null" >
        form_performance_weight = #{form_performance_weight,jdbcType=INTEGER},
      </if>
      <if test="form_capitalprogress_weight != null" >
        form_capitalprogress_weight = #{form_capitalprogress_weight,jdbcType=INTEGER},
      </if>
    </set>
          where id = #{id,jdbcType=BIGINT}
    </update>
    
    <insert id="insertTaskSchool" parameterType="com.philip.edu.eval.bean.ColTaskSchool" useGeneratedKeys="true" keyProperty="id" >
    	insert into tbl_collection_school(collection_task_id, school_id, process_status)
    	values(#{task_id},#{school_id},#{process_status})
    </insert>
    
    <insert id="insertColSchool" parameterType="java.util.List">
    	insert into tbl_collection_school(collection_task_id, school_id, process_status)
    	values
    	<foreach collection="taskSchools" item="school" index="index" separator=",">
    		(
    			#{school.task_id},#{school.school_id},#{school.process_status}
    		)
    	</foreach>
    </insert>
    
    <insert id="insertTaskMajors" parameterType="java.util.List">
    	insert into tbl_collection_major(collection_school_id, major_id, create_time, update_time, process_status)
    	values
    	<foreach collection="taskMajors" item="major" index="index" separator=",">
    		(
    			#{major.collection_school_id},#{major.major_id},#{major.create_time},#{major.update_time},#{major.process_status}
    		)
    	</foreach>
    </insert>
    
    <insert id="insertTaskMajor" parameterType="com.philip.edu.eval.bean.ColTaskMajor" useGeneratedKeys="true" keyProperty="id">
    	<selectKey resultType="int" keyProperty="id" order="AFTER">
    		select LAST_INSERT_ID()
  		</selectKey>
    	insert into tbl_collection_major(collection_school_id, major_id, create_time, update_time, process_status)
    	values(#{collection_school_id},#{major_id},#{create_time},#{update_time},#{process_status})
    </insert>
    
    <select id="getColTaskSchoolId" parameterType="int" resultMap="colTaskSchoolId">
    	select id from tbl_collection_school where collection_task_id=#{task_id} and school_id=#{school_id}
    </select>
    
    <delete id="deleteTaskSchools" parameterType="int[]">
    	delete from tbl_collection_school where
    	school_id in 
    	<foreach collection="array" item="school" index="no" open="(" separator="," close=")">
    		#{school}
    	</foreach> 
    </delete>
    
    <delete id="deleteMaterial" parameterType="int">
    	delete from tbl_support_material where id=#{id}
    </delete>
    
    <delete id="deleteTaskMajors" parameterType="int">
    	delete from tbl_collection_major where
    	collection_school_id = #{collectoin_schools_id}
    </delete>
    
    <delete id="deleteTaskOldSchools" parameterType="int[]">
    	delete from tbl_collection_major where 
    	collection_school_id in
    	<foreach collection="collection_school_ids" item="school" index="no" open="(" separator="," close=")">
    		#{school}
    	</foreach> 
    </delete> 
    
    <delete id="deleteTaskSchool" parameterType="int">
    	delete from tbl_collection_school where
    	collection_task_id=#{task_id}
    </delete>
    
    <insert id="insertBasicForm" parameterType="com.philip.edu.eval.bean.BasicForm">
    	insert into tbl_form_basic(collection_major_id, process_status, create_time, update_time)
    	values(#{collection_major_id}, #{process_status}, #{create_time}, #{update_time})
    </insert>
    
    <insert id="insertPerformanceForms" parameterType="com.philip.edu.eval.bean.PerformanceForm">
    	insert into tbl_form_performance(collection_major_id, metrics_id, unit, create_time, update_time, process_status, for_template)
    	select #{collection_major_id}, id, unit, #{create_time}, #{update_time}, #{process_status}, #{for_template}
    	from tbl_metrics_detail where m_system_id=#{m_system_id}
    </insert>
    
    <insert id="insertPerformanceForm" parameterType="com.philip.edu.eval.bean.PerformanceForm" useGeneratedKeys="true" keyProperty="id">
    	insert into tbl_form_performance(collection_major_id, metrics_id, unit, create_time, update_time, process_status, for_template)
    	values(#{collection_major_id}, #{metrics_id}, #{unit}, #{create_time}, #{update_time}, #{process_status}, #{for_template})
    </insert>
    
    <insert id="insertCapitalProgressForm" parameterType="com.philip.edu.eval.bean.CapitalProgressForm">
    	insert into tbl_form_capitalprogress(collection_major_id, create_time, update_time, process_status)
    	values(#{collection_major_id}, #{create_time}, #{update_time}, #{process_status})
    </insert>
    
    <select id="getColTaskList" resultMap="colTaskListResultMap">
    	select id, task_name, task_year, start_time, end_time, status, form_basic_weight, form_performance_weight, form_capitalprogress_weight from tbl_collection_tasks order by id desc
    </select>
    
    <select id="countTaskSchool" resultType="int" parameterType="int">
    	select count(*) from tbl_collection_school where collection_task_id=#{task_id}
    </select>
    
    <select id="countTaskMajor" resultType="int" parameterType="int">
    	select count(*) from tbl_collection_major 
    	where collection_school_id in (select id from tbl_collection_school where collection_task_id=#{task_id})
    </select>
    
    <update id="updateStatus">
    	update tbl_collection_tasks
    	set status = #{status}
    	where id=#{task_id}
    </update>
    
    <delete id="batchDeleteTasks" parameterType="int[]">
    	delete from tbl_collection_tasks where id in 
    	<foreach collection="array" item="id" index="no" open="(" separator="," close=")">
    		#{id}
    	</foreach>
    </delete>
    
    <insert id="insertMetrics" parameterType="com.philip.edu.eval.bean.MetricsDetail" useGeneratedKeys="true" keyProperty="id">
    	insert into tbl_metrics_detail(m_system_id, metric_name, metric_code, unit, pid, morder, level, description)
    	values(#{m_system_id}, #{metrics_name}, #{metrics_code}, #{unit}, #{pid}, #{order}, #{level}, #{description})
    </insert>
    
    <insert id="insertMaterials" parameterType="java.util.List">
    	insert into tbl_support_material(metrics_id, material_name, description)
    	values
    	<foreach collection="list" item="material" index="index" separator=",">
    	(#{material.metrics_id}, #{material.material_name}, #{material.memo})
    	</foreach>
    </insert>
    
    <insert id="insertRelateMaterial" parameterType="com.philip.edu.eval.bean.Material">
    	insert into tbl_collection_material(form_performance_id, metrics_id, material_id, material_name, required, create_time, update_time)
    	values(#{form_performance_id}, #{metrics_id}, #{id}, #{material_name}, #{is_required}, #{create_time}, #{update_time})
    </insert>
    
    <select id="selectMetricsList" resultMap="metricsListResultMap">
    	select * from tbl_metrics_detail where m_system_id=#{m_system_id} order by pid, morder
    </select>
    
    <select id="countMaterials" resultType="int">
    	select count(*) from tbl_support_material where metrics_id=#{metrics_id}
    </select>
    
    <update id="updateMetrics" parameterType="com.philip.edu.eval.bean.MetricsDetail">
    	update tbl_metrics_detail
    	set metric_name = #{metrics_name}, metric_code=#{metrics_code}, morder=#{order}, pid=#{pid}, unit=#{unit}, level=#{level}, description=#{description}
    	where id=#{id}
    </update>
    
    <delete id="deleteMetrics" parameterType="int">
    	delete from tbl_metrics_detail
    	where id=#{metrics_id}
    </delete>
    
    <select id="getPerformanceForm" resultMap="performanceResultMap" >
    	select pf.id,collection_major_id, metrics_id, metric_name, m.unit, m.level, m.pid, m.morder, current_value, target_value, actual_value, score, self_evaluate, self_introduction, process_status
    	from tbl_form_performance pf left join tbl_metrics_detail m on pf.metrics_id = m.id where collection_major_id = #{collection_major_id} and for_template=#{for_template}
    </select>
    
    <select id="getRelateMaterials" resultMap="materialResultMap">
    	 select cm.id, material_id, sm.material_name, cm.update_time, doc_size, sm.metrics_id
		 from  tbl_support_material sm, tbl_collection_material cm
		 where cm.material_id=sm.id and cm.form_performance_id=#{pf_id}
    </select>
    
    <select id="getMaterialMetrics" resultMap="materialResultMap">
    	select * from tbl_support_material where metrics_id=#{metrics_id}
    </select>
    
    <select id="selectCapitalProgress" resultMap="capitalResultMap">
    	select * from tbl_form_capitalprogress where collection_major_id=#{collection_major_id}
    </select>
    
    <select id="countRequiredMaterial" resultType="int">
    	select count(*) from tbl_collection_material where form_performance_id=#{form_performance_id} and required='Y'
    </select>
    
    <select id="countUploadedMaterial" resultType="int">
    	select count(*) from tbl_collection_material where form_performance_id=#{form_performance_id} and doc is not null
    </select>
    
    <select id="getCapitalProgressItemId" resultMap="CapitalPerformanceIdMap">
    	select id from tbl_form_performance where collection_major_id=#{collection_major_id} and metrics_id=#{metrics_id}
    </select>
    
    <select id="getCapitalProgress" resultMap="capitalResultMap">
    	select cp.id,cp.collection_major_id from tbl_form_capitalprogress cp, tbl_form_performance p where cp.collection_major_id=p.collection_major_id and p.id=#{performance_form_id}
    </select> 
    
    <select id="getBasicFormItemId" resultMap="BasicPerfromanceIdMap">
    	select id from tbl_form_performance where collection_major_id=#{collection_major_id} and metrics_id=#{metrics_id}
    </select>
    
    <insert id="updatePerformanceForm">
    	update tbl_form_performance set current_value=#{current_value}, target_value=#{target_value}, actual_value=#{actual_value}, score=#{score}, self_evaluate=#{self_evaluate}, update_time=#{update_time}, self_introduction=#{self_introduction}
    	where id=#{id}
    </insert>
    
    <insert id="updatePerformanceFormStatus">
    	update tbl_form_performance set process_status=#{process_status} where collection_major_id=#{collection_major_id}
    </insert>
    
    <update id="updateCapitalProgressForm">
        update tbl_form_capitalprogress
    <set >
      <if test="collection_major_id != null" >
        collection_major_id = #{collection_major_id,jdbcType=BIGINT},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null" >
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="region_disbursement_amount != null and region_disbursement_amount != 0 and region_disbursement_amount != 0.0" >
        region_disbursement_amount = #{region_disbursement_amount,jdbcType=DOUBLE},
      </if>
      <if test="region_paid_hardware_amount != null and region_paid_hardware_amount != 0" >
        region_paid_hardware_amount = #{region_paid_hardware_amount,jdbcType=DOUBLE},
      </if>
      <if test="region_paid_internal_amount != null and region_paid_internal_amount != 0" >
        region_paid_internal_amount = #{region_paid_internal_amount,jdbcType=DOUBLE},
      </if>
      <if test="central_disbursement_amount != null and central_disbursement_amount != 0" >
        central_disbursement_amount = #{central_disbursement_amount,jdbcType=DOUBLE},
      </if>
      <if test="central_paid_hardware_amount != null and central_paid_hardware_amount != 0" >
        central_paid_hardware_amount = #{central_paid_hardware_amount,jdbcType=DOUBLE},
      </if>
      <if test="central_paid_internal_amount != null and central_paid_internal_amount != 0" >
        central_paid_internal_amount = #{central_paid_internal_amount,jdbcType=DOUBLE},
      </if>
      <if test="school_funding_total != null and school_funding_total != 0" >
        school_funding_total = #{school_funding_total,jdbcType=DOUBLE},
      </if>
      <if test="school_funding_hardware != null and school_funding_hardware != 0" >
        school_funding_hardware = #{school_funding_hardware,jdbcType=DOUBLE},
      </if>
      <if test="school_funding_internal != null and school_funding_internal != 0" >
        school_funding_internal = #{school_funding_internal,jdbcType=DOUBLE},
      </if>
      <if test="process_status != null" >
        process_status = #{process_status,jdbcType=CHAR},
      </if>
    </set>
	 where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateCapitalFormStatus">
  	update tbl_form_capitalprogress set process_status=#{process_status}, update_time=#{update_time} where collection_major_id=#{collection_major_id}
  </update>
    
    <select id="selectPerformanceItem" resultMap="performanceResultMap">
    	select * from tbl_form_performance where id=#{form_performance_id}
   	</select>
    
    <select id="getChosenSchools" resultMap="colTaskSchoolResultMap">
    	select cs.school_id,s.school_name,s.school_code, cs.id as cid from tbl_collection_school cs, tbl_school s
    	where cs.school_id = s.id and collection_task_id=#{task_id}
    </select>
    
    <select id="getChosenMajors" resultMap="colTaskMajorResultMap">
    	select cm.major_id, m.major_code, m.major_name from tbl_collection_major cm, tbl_major m
    	where cm.major_id = m.id and collection_school_id=#{collection_school_id}
    </select>
    
    <select id="getChosenMajorId" resultMap="colTaskMajorResultMap">
    	select cm.major_id, m.major_code, m.major_name from tbl_collection_major cm, tbl_major m
    	where cm.major_id = m.id and collection_school_id=#{collection_school_id}
    </select>
    
	<select id="getMajorStatusByTask"
		resultMap="majorStatusResultMap">
		select
		v_task_school_major.task_id,
		v_task_school_major.task_name,
		task_status.config_value as task_status,
		major_status.config_value as major_status,
		major_status.key_string as major_status_key,
		v_task_school_major.task_year,
		tbl_major.id as major_id,
		tbl_major.major_name,
		tbl_school.id as school_id,
		tbl_school.school_name,
		v_task_school_major.update_time,
		v_task_school_major.collection_school_id
		from
		v_user_school_major,
		v_task_school_major,
		tbl_major, tbl_school,
		tbl_config as task_status,
		tbl_config as major_status
		where
		v_user_school_major.user_id=#{user_id}
		AND
		v_task_school_major.task_id=#{task_id}
		and
		v_task_school_major.major_id=
		tbl_major.id
		and
		v_task_school_major.school_id = tbl_school.id
		and
		v_user_school_major.major_id
		= v_task_school_major.major_id
		and
		v_user_school_major.school_id =v_task_school_major.school_id
		AND
		task_status.key_string = v_task_school_major.task_status
		and
		task_status.config_type = 'task_status'
		AND
		major_status.key_string = v_task_school_major.major_status
		and
		major_status.config_type = 'collection_status'

	</select>

	<select id="getMajorCollectionStatus"
		resultMap="majorCollectionStatusResultMap">
		select * from
		v_school_major_template_status_2
		where
		v_school_major_template_status_2.task_id=#{task_id}
		AND
		v_school_major_template_status_2.major_id = #{major_id}
		and
		v_school_major_template_status_2.school_id = #{school_id}
	</select>
    
    	<resultMap id="userTaskResultMap"
		type="com.philip.edu.eval.bean.UserTask">
		<result property="user_id" column="user_id" />
		<result property="task_id" column="task_id" />
		<result property="task_name" column="task_name" />
		<result property="task_status" column="task_status" />
		<result property="task_year" column="task_year" />
	</resultMap>

<resultMap id="majorStatusResultMap"
  type="com.philip.edu.eval.bean.MajorStatus">
  <result property="task_id" column="task_id" />
  <result property="task_name" column="task_name" />
  <result property="major_status" column="major_status" />
  <result property="major_name" column="major_name" />
  <result property="major_id" column="major_id" />
  <result property="school_id" column="school_id" />
  <result property="task_year" column="task_year" />
  <result property="school_name" column="school_name" />
  <result property="major_status" column="major_status" />
  <result property="update_time" column="update_time" />
  <result property="collection_school_id" column="collection_school_id" />
 </resultMap>

<resultMap id="majorCollectionStatusResultMap"
  type="com.philip.edu.eval.bean.MajorCollectionStatus">
  <result property="task_id" column="task_id" />
  <result property="school_id" column="school_id;" />
  <result property="major_id" column="major_id" />
  <result property="collection_template_name"
   column="collection_template_name" />
  <result property="template_type_string" column="template_type" />
  <result property="process_status" column="process_status" />
  <result property="process_status_key" column="process_status_key" />
  <result property="collection_major_id"
   column="collection_major_id" />
 </resultMap>
	
	<select id="getUserTaskList" resultMap="userTaskResultMap">
		select distinct
		v_task_school_major.task_id,
		v_task_school_major.task_name,
		v_task_school_major.task_status,
		v_task_school_major.task_year
		from
		v_user_school_major,
		v_task_school_major
		where
		v_user_school_major.user_id=#{user_id}
		and
		v_user_school_major.major_id
		= v_task_school_major.major_id
		and
		v_user_school_major.school_id =
		v_task_school_major.school_id
		and
		v_task_school_major.task_status='A'
	</select>

	<select id="getUserTaskByTaskID" resultMap="userTaskResultMap">
		select distinct
		v_task_school_major.task_id,
		v_task_school_major.task_name,
		v_task_school_major.task_status,
		v_task_school_major.task_year
		from
		v_user_school_major,
		v_task_school_major
		where
		v_user_school_major.user_id=#{user_id}
		and
		v_task_school_major.task_id=#{task_id}
		and
		v_user_school_major.major_id
		=
		v_task_school_major.major_id
		and
		v_user_school_major.school_id =
		v_task_school_major.school_id
	</select>
	
	<select id="selectStatusList" resultMap="statusResultMap">
		select key_int, config_value, key_string from tbl_config where config_type='collection_status' 
	</select>
	
	<select id="selectSchoolTaskList" resultMap="SchoolTaskResultMap">
		SELECT t.id, t.task_name, t.task_year, t.start_time, t.end_time, s.school_id, u.user_id 
		FROM tbl_collection_tasks t, tbl_collection_school s, tbl_school_user u 
		where t.id = s.collection_task_id and s.school_id = u.school_id and user_id=#{user_id} and t.status='A';
	</select>
	
	<select id="searchTaskList" resultMap="MajorTaskResultMap">
		select m.id as collection_major_id, s.school_id, s1.school_name, m.major_id, m1.major_name, m.process_status, c.config_value, m.update_time  
		from tbl_collection_tasks t, tbl_collection_school s, tbl_collection_major m, tbl_school s1, tbl_major m1, tbl_config c 
		where t.id = s.collection_task_id and s.id = m.collection_school_id and s1.id = s.school_id and m1.id = m.major_id and c.key_string = m.process_status
		<if test="task_id!=0">
			and t.id=#{task_id}
		</if>
		<if test="school_id!=0">
			and s.school_id=#{school_id}
		</if>
		<if test="major_id!=0">
			and m.major_id=#{major_id}
		</if>
		<if test="process_status!='-'">
			and m.process_status=#{process_status}
		</if>
	</select> 
	
	<update id="updateBasicForm">
		update tbl_form_basic set process_status=#{process_status}, update_time=#{update_time} where collection_major_id=#{collection_major_id}
	</update>
	
	<update id="updateTaskStatus">
		update tbl_collection_major set process_status=#{process_status}, update_time=now()
		where id=#{id}
	</update>
	
	<update id="updateMajorStatus">
	  update tbl_collection_major set
	  process_status='S' , update_time =NOW()
	  where collection_school_id=#{collection_school_id}
	  and major_id = #{major_id}
	</update>
	
</mapper>
